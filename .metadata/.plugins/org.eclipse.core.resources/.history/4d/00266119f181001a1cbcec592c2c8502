package com.accomodation.roomdao;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.ServletException;

import com.accomodation.dataconncetion.DatabaseConnection;
import com.accomodation.model.RoomModel;
import com.accomodation.model.RoomTypeModel;

public class RoomDao {
	public static boolean addRoom(RoomModel roomModel) throws ServletException, IOException {
		try {
			Connection con = DatabaseConnection.initializeDatabase();
			PreparedStatement queryRoomGet = con.prepareStatement("select * from room_type where id=?");
			queryRoomGet.setInt(1, roomModel.getTypeID());
			ResultSet room = queryRoomGet.executeQuery();
			if (room.next()) {
				String typename = room.getString("typename");
				PreparedStatement queryRoom = con.prepareStatement("insert into room_details values(?,?,?,?,?,?,?)");
				queryRoom.setString(1, null);
				queryRoom.setInt(2, roomModel.getTypeID());
				queryRoom.setString(3, roomModel.getLocation());
				queryRoom.setInt(4, roomModel.getMonthlyCharge());
				queryRoom.setString(5, typename);
				queryRoom.setBoolean(6, roomModel.getAvailable());
				queryRoom.setString(7, roomModel.getDescription());
				queryRoom.execute();
				queryRoom.close();
			}
			
			con.close();
			return true;
		} catch (Exception e) {
			// TODO: handle exception
			return false;
		}
	}
	public static List<RoomModel> getRooms() throws ServletException, IOException {
		try {
			List<RoomModel> listroomTypeModel = new ArrayList<>();
			Connection con = DatabaseConnection.initializeDatabase();
			PreparedStatement queryRoomGet = con.prepareStatement("select * from room_details");
			ResultSet rooms = queryRoomGet.executeQuery();
			while (rooms.next()) {
				String location = rooms.getString("room_location");
				String description = rooms.getString("room_description");
				boolean available = rooms.getBoolean("room_available");
				String typename = rooms.getString("roomtype_name");
				int charge =rooms.getInt("monthly_charge");
				int id = rooms.getInt("id");
				int typeid = rooms.getInt("type_id");
				RoomModel roomTypeModel = new RoomModel(id,typeid, typename, available,location,charge,description);
				listroomTypeModel.add(roomTypeModel);
			}
			con.close();
			return listroomTypeModel;
		} catch (Exception e) {
			// TODO: handle exception
			return null;
		}
	}
	public static RoomModel getRoomId(int id) throws ServletException, IOException {
		try {
			RoomModel roomTypeModel = null;
			Connection con = DatabaseConnection.initializeDatabase();
			PreparedStatement queryRoomGet = con.prepareStatement("select * from room_details where id=?");
			queryRoomGet.setInt(1, id);
			ResultSet rooms = queryRoomGet.executeQuery();
			if (rooms.next()) {
				String location = rooms.getString("room_location");
				String description = rooms.getString("room_description");
				boolean available = rooms.getBoolean("room_available");
				String typename = rooms.getString("roomtype_name");
				int charge =rooms.getInt("monthly_charge");
				int idroom = rooms.getInt("id");
				int typeid = rooms.getInt("type_id");
				 roomTypeModel = new RoomModel(idroom,typeid, typename, available,location,charge,description);
			}
			return roomTypeModel;
		} catch (Exception e) {
			// TODO: handle exception
			return null;
		}
	}

	public static boolean insertEditRoom(RoomModel roomModel) throws ServletException, IOException {

		try {
			Connection con = DatabaseConnection.initializeDatabase();
			PreparedStatement queryRoomGet = con.prepareStatement("select * from room_type where id=?");
			queryRoomGet.setInt(1, roomModel.getTypeID());
			ResultSet room = queryRoomGet.executeQuery();
			if (room.next()) {
				String typename = room.getString("typename");
			
			PreparedStatement queryRoom = con
					.prepareStatement("update room_details set roomtype_name=?, room_available=?,room_location=?,monthly_charge=?,"
							+ "room_description=?,type_id=? where id=?");
			queryRoom.setString(1, typename);
			queryRoom.setBoolean(2, true);
			queryRoom.setString(3, roomModel.getLocation());
			queryRoom.setInt(4, roomModel.getMonthlyCharge());
			queryRoom.setString(5, roomModel.getDescription());
			queryRoom.setInt(6, roomModel.getTypeID());
			queryRoom.setInt(7, roomModel.getId());
			boolean rowUpdated = queryRoom.executeUpdate() > 0;
			
			queryRoom.close();
			con.close();
			return rowUpdated;
			}
			return false;
		} catch (Exception e) {
			// TODO: handle exception
			return false;
		}
	}

	public static boolean deleteRoom(int id) throws ServletException, IOException {
		try {
			Connection con = DatabaseConnection.initializeDatabase();
			PreparedStatement queryRoom = con.prepareStatement("delete from room_details  where id=?");
			queryRoom.setInt(1, id);
			boolean deleted = queryRoom.executeUpdate() > 0;
			return deleted;
		} catch (Exception e) {
			// TODO: handle exception
			return false;
		}
	}
	
	public static boolean bookRoom(int roomid,int userid) throws ServletException, IOException {
		try {
			Connection con = DatabaseConnection.initializeDatabase();
			PreparedStatement queryRoom = con.prepareStatement("insert into student_room(id,student_id,room_id) values"
					+ "(?,?,?)");
			PreparedStatement queryStudent = con.prepareStatement("select * from student_details where user_id=?");
			queryStudent.setInt(1, userid);
			ResultSet student=queryStudent.executeQuery();
			if(student.next()) {
				queryRoom.setString(1, null);
				queryRoom.setInt(2, userid);
				queryRoom.setInt(3, student.getInt("id"));
				boolean booked = queryRoom.executeUpdate() > 0;
				return booked;
			}
			return false;
			
		} catch (Exception e) {
			// TODO: handle exception
			return false;
		}
	}
}
